[build-system]
requires = ["scikit-build-core>=0.11.6", "nanobind", "sccache"]
build-backend = "scikit_build_core.build"


[project]
name = "messops"
authors = [
  { name = "Hatem Helal", email = "hatem.helal@gmail.com" },
]
description = "MESSOPS: Ops for MESS"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE.md"]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
  "numpy"
]

[project.urls]
Homepage = "https://github.com/hatemhelal/messops"
"Bug Tracker" = "https://github.com/hatemhelal/messops/issues"
Discussions = "https://github.com/hatemhelal/messops/discussions"
Changelog = "https://github.com/hatemhelal/messops/releases"


[dependency-groups]
test = [
  "pytest",
  "pytest-benchmark",
]
dev = [
  { include-group = "test"},
  "cmake",
  "nanobind",
  "ninja",
  "scikit-build-core",
  "setuptools_scm",
  "pre-commit",
  "sccache"
]


[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/messops/_version.py"]

[tool.scikit-build.cmake.define]
CMAKE_EXPORT_COMPILE_COMMANDS = true
CMAKE_CXX_COMPILER_LAUNCHER = "sccache"
CMAKE_C_COMPILER_LAUNCHER = "sccache"

[tool.setuptools_scm]
write_to = "src/messops/_version.py"


[tool.cibuildwheel]
test-command = "pytest {project}/tests"
test-extras = ["test"]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.mypy]
files = ["src", "tests"]
python_version = "3.11"
warn_unused_configs = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "messops.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]

[tool.ruff.lint]
extend-select = [
  "ARG",      # flake8-unused-arguments
  "B",        # flake8-bugbear
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "EXE",      # flake8-executable
  "G",        # flake8-logging-format
  "I",        # isort
  "ICN",      # flake8-import-conventions
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["messops._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
